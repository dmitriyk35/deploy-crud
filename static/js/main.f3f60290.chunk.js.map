{"version":3,"sources":["components/navbar.component.js","components/services-list.component.js","components/edit-service.component.js","components/create-appointment.component.js","components/create-user.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Service","props","service","username","firstname","lastname","phonenumber","email","description","duration","date","substring","_id","href","onClick","deleteService","ServicesList","bind","state","services","axios","get","then","response","setState","data","catch","error","console","log","id","delete","this","filter","el","map","currentservice","key","serviceList","EditService","onChangeUsername","onChangeFirstName","onChangeLastName","onChangePhoneNumber","onChangeEmail","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","Date","users","match","params","length","user","e","target","value","preventDefault","post","res","window","location","ref","required","onChange","type","selected","responseFacebook","CreateServices","appId","autoLoad","fields","callback","CreateUsers","App","path","exact","component","CreateAppointment","CreateUser","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f3f60290.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n        <Link to=\"/\" className=\"navbar-brand\">Barber Shop Finder</Link>\n        <div className=\"collpase navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"navbar-item\">\n          <Link to=\"/\" className=\"nav-link\">Services</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/create\" className=\"nav-link\">Create Appointment</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/user\" className=\"nav-link\">Create User</Link>\n          </li>\n        </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Service = props => (\n  <tr>\n    <td>{props.service.username}</td>\n    <td>{props.service.firstname}</td>\n    <td>{props.service.lastname}</td>\n    <td>{props.service.phonenumber}</td>\n    <td>{props.service.email}</td>\n    <td>{props.service.description}</td>\n    <td>{props.service.duration}</td>\n    <td>{props.service.date.substring(0,10)}</td>\n    <td>\n      <Link to={\"/edit/\"+props.service._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteService(props.service._id) }}>delete</a>\n    </td>\n  </tr>\n)\n\nexport default class ServicesList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.deleteService = this.deleteService.bind(this);\n\n    this.state = {services: []};\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/services/')\n      .then(response => {\n        this.setState({ services: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  deleteService(id) {\n  axios.delete('http://localhost:5000/services/'+id)\n    .then(response => { console.log(response.data)});\n\n  this.setState({\n    services: this.state.services.filter(el => el._id !== id)\n  })\n}\n\nserviceList() {\n  return this.state.services.map(currentservice => {\n    return <Service service={currentservice} deleteService={this.deleteService} key={currentservice._id}/>;\n  })\n}\n\n\n  render() {\n      return (\n        <div>\n        <h3>Logged Services</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Username</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Phone Number</th>\n              <th>Email</th>\n              <th>Description</th>\n              <th>Duration</th>\n              <th>Date</th>\n              <th>Actions</th>\n\n\n            </tr>\n          </thead>\n          <tbody>\n            { this.serviceList() }\n          </tbody>\n        </table>\n      </div>\n      )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class EditService extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      firstname: '',\n      lastname: '',\n      phonenumber: '',\n      email: '',\n      description: '',\n      duration: 0,\n      date: new Date(),\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/services/'+this.props.match.params.id)\n      .then(response => {\n        this.setState({\n          username: response.data.username,\n          firstname: response.data.firstname,\n          lastname: response.data.lastname,\n          phonenumber: response.data.phonenumber,\n          email: response.data.email,\n          description: response.data.description,\n          duration: response.data.duration,\n          date: new Date(response.data.date)\n        })\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n    axios.get('http://localhost:5000/users/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username),\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    })\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onChangePhoneNumber(e) {\n    this.setState({\n      phonenumber: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    })\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const service = {\n      username: this.state.username,\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phonenumber: this.state.phonenumber,\n      email: this.state.email,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    }\n\n    console.log(service);\n\n    axios.post('http://localhost:5000/services/update/' + this.props.match.params.id, service)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n\n  render() {\n    return (\n    <div>\n      <h3>Edit Service Log</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n          <label>Username: </label>\n          <select ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}>\n              {\n                this.state.users.map(function(user) {\n                  return <option\n                    key={user}\n                    value={user}>{user}\n                    </option>;\n                })\n              }\n          </select>\n        </div>\n        <div className=\"f_lName\">\n          <div className=\"form-group\">\n            <label>First Name: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.firstname}\n                onChange={this.onChangeFirstName}\n                />\n          </div>\n          <div className=\"form-group\">\n            <label>Last Name: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.lastname}\n                onChange={this.onChangeLastName}\n                />\n          </div>\n        </div>\n        <div className=\"f_lName\">\n          <div className=\"form-group\">\n            <label>Mobile Number: </label>\n            <input  type=\"number\"\n                required\n                className=\"form-control\"\n                value={this.state.phonenumber}\n                onChange={this.onChangePhoneNumber}\n                />\n          </div>\n          <div className=\"form-group\">\n            <label>Email: </label>\n            <input  type=\"email\"\n                required\n                className=\"form-control\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n                />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label>Description: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Duration (in minutes): </label>\n          <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={this.onChangeDuration}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Date: </label>\n          <div>\n            <DatePicker\n              selected={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Edit Service Log\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport FacebookLogin from 'react-facebook-login';\n\nconst responseFacebook = (response) => {\n  console.log(response);\n}\n\nexport default class CreateServices extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      phonenumber: \"\",\n      email: \"\",\n      description: \"\",\n      duration: 0,\n      date: new Date(),\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/users/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username),\n            username: response.data[0].username\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onChangePhoneNumber(e) {\n    this.setState({\n      phonenumber: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const service = {\n      username: this.state.username,\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phonenumber: this.state.phonenumber,\n      email: this.state.email,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    }\n\n    console.log(service);\n\n    axios.post('http://localhost:5000/services/add', service)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n\n  render() {\n      return (\n        <div>\n\n        <FacebookLogin\n        appId=\"297560121491950\"\n        autoLoad={false}\n          fields=\"name,email,picture\"\n          callback={responseFacebook}\n      />\n\n      \n      <h3>Create New Appointment With A Barber</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n          <label>Username: </label> {/* maybe change username to barber? */}\n          <select ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}>\n              {\n                this.state.users.map(function(user) {\n                  return <option\n                    key={user}\n                    value={user}>{user}\n                    </option>;\n                })\n              }\n          </select>\n        </div>\n      <div className=\"f_lName\">\n        <div className=\"form-group\">\n          <label>First Name: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.firstname}\n              onChange={this.onChangeFirstName}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Last Name: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.lastname}\n              onChange={this.onChangeLastName}\n              />\n        </div>\n      </div>\n      <div className=\"f_lName\">\n        <div className=\"form-group\">\n          <label>Mobile Number: </label>\n          <input  type=\"number\"\n              required\n              className=\"form-control\"\n              value={this.state.phonenumber}\n              onChange={this.onChangePhoneNumber}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Email: </label>\n          <input  type=\"email\"\n              required\n              className=\"form-control\"\n              value={this.state.email}\n              onChange={this.onChangeEmail}\n              />\n        </div>\n      </div>\n        <div className=\"form-group\">\n          <label>Description: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Duration (in minutes): </label>\n          <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={this.onChangeDuration}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Date: </label>\n          <div>\n            <DatePicker\n              selected={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Create Service Log\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n      )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class CreateUsers extends Component {\nconstructor(props) {\n  super(props);\n\n  this.onChangeUsername = this.onChangeUsername.bind(this);\n  this.onSubmit = this.onSubmit.bind(this);\n\n  this.state = {\n    username: \"\",\n  }\n}\n\nonChangeUsername(e) {\n  this.setState({\n    username: e.target.value\n  });\n}\n\nonSubmit(e) {\n  e.preventDefault();\n\n  const user = {\n    username: this.state.username,\n  }\n\n  console.log(user);\n\n  axios.post('http://localhost:5000/users/add', user)\n    .then(res => console.log(res.data));\n\n  this.setState({\n    username: \"\"\n  })\n}\n\n  render() {\n      return (\n        <div>\n            <h3>Create New User</h3>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label>Username: </label>\n                <input  type=\"text\"\n                    required\n                    className=\"form-control\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\n            </div>\n          </form>\n        </div>\n      )\n    }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\nimport Navbar from \"./components/navbar.component\";\nimport ServicesList from \"./components/services-list.component\";\nimport EditService from \"./components/edit-service.component\";\nimport CreateAppointment from \"./components/create-appointment.component\";\nimport CreateUser from \"./components/create-user.component\";\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"container\">\n      <Navbar />\n        <br/>\n        <Route path=\"/\" exact component={ServicesList} />\n        <Route path=\"/edit/:id\" component={EditService} />\n        <Route path=\"/create\" component={CreateAppointment} />\n        <Route path=\"/user\" component={CreateUser} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}